@inject NavigationManager UriHelper

<MatDialog @bind-IsOpen="@Model.IsOpen" CanBeClosed="false">
    <MatDialogTitle Class="diHeader">
        <h3>Информация о произошедшей системной ошибке</h3>
        <div class="btn-group">
            <button class="btn btn-nav" type="button" @onclick="@CloseDialog">
                <i class="glyphicon glyphicon-remove"></i>
            </button>
        </div>
        <hr />
    </MatDialogTitle>
    <MatDialogContent>
        <div class="h-100">
            <div>
                <h3 class="d-inline-block">Исключение: </h3><span style="color: red">@Model.ErrorMessage</span>
            </div>
            <label>В скором времени ошибка будет исправлена.</label>
        </div>
    </MatDialogContent>
</MatDialog>

@code {
    [CascadingParameter]
    Task<AuthenticationState> authenticationStateTask { get; set; }

    [Parameter]
    public ErrorComponentViewModel Model { get; set; }

    private string MainUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        MainUrl = UriHelper.BaseUri;
    }


    private void CloseDialog()
    {
        Model.IsOpen = false;
        var navUrl = String.IsNullOrEmpty(Model.RedirectUrl) ? MainUrl : Model.RedirectUrl;
        UriHelper.NavigateTo(navUrl, true);
    }
}
