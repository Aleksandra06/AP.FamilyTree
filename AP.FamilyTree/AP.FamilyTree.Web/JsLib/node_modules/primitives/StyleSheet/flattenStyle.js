'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = flattenStyle;

var _ReactNativePropRegistry = require('./ReactNativePropRegistry');

var _ReactNativePropRegistry2 = _interopRequireDefault(_ReactNativePropRegistry);

var _invariant = require('fbjs/lib/invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _isObject = require('./utils/isObject');

var _isObject2 = _interopRequireDefault(_isObject);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getStyle(style) {
  if (typeof style === 'number') {
    return _ReactNativePropRegistry2.default.getByID(style);
  }
  return style;
}

function flattenStyle(style) {
  if (!style) {
    return undefined;
  }
  (0, _invariant2.default)(style !== true, 'style may be false but not true');

  if (!Array.isArray(style)) {
    return getStyle(style);
  }

  var result = {};
  for (var i = 0, styleLength = style.length; i < styleLength; ++i) {
    var computedStyle = flattenStyle(style[i]);
    if (computedStyle) {
      merge(result, computedStyle);
    }
  }
  return result;
}

// Helpers

function merge(obj, source) {
  /* eslint no-restricted-syntax: 0 */
  for (var key in source) {
    if ((0, _isObject2.default)(obj[key]) && (0, _isObject2.default)(source[key])) {
      obj[key] = merge(obj[key], source[key]);
    } else {
      obj[key] = source[key];
    }
  }

  return obj;
}