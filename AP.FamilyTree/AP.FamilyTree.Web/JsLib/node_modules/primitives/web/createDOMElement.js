'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

// Taken from:
// https://github.com/lelandrichardson/react-primitives/blob/master/src/Primitive.js
// https://github.com/necolas/react-native-web/blob/master/src/modules/createDOMElement/index.js

var roleComponents = {
  article: 'article',
  banner: 'header',
  button: 'button',
  complementary: 'aside',
  contentinfo: 'footer',
  form: 'form',
  heading: 'h1',
  link: 'a',
  list: 'ul',
  listitem: 'li',
  main: 'main',
  navigation: 'nav',
  region: 'section'
};

function createDOMElement(component) {
  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var accessibilityLabel = props.accessibilityLabel;
  var accessibilityLiveRegion = props.accessibilityLiveRegion;
  var accessibilityRole = props.accessibilityRole;
  var accessibilityLevel = props.accessibilityLevel;
  var _props$accessible = props.accessible;
  var accessible = _props$accessible === undefined ? true : _props$accessible;
  var testID = props.testID;
  var type = props.type;

  var other = _objectWithoutProperties(props, ['accessibilityLabel', 'accessibilityLiveRegion', 'accessibilityRole', 'accessibilityLevel', 'accessible', 'testID', 'type']);

  var accessibilityComponent = accessibilityRole && roleComponents[accessibilityRole];
  var Component = accessibilityRole === 'heading' && accessibilityLevel ? headingComponent(accessibilityLevel) : accessibilityComponent || component;

  return _react2.default.createElement(Component, _extends({}, other, {
    'aria-hidden': accessible ? undefined : true,
    'aria-label': accessibilityLabel,
    'aria-live': accessibilityLiveRegion,
    'aria-level': accessibilityLevel,
    'data-testid': testID,
    role: accessibilityRole,
    type: accessibilityRole === 'button' ? 'button' : type
  }));
}

exports.default = createDOMElement;


function headingComponent(level) {
  // from h1 to h6
  return 'h' + Math.min(6, Math.max(1, parseInt(level, 10)));
}