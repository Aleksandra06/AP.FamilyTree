'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

// https://github.com/facebook/css-layout
var cssLayoutBaseStyle = exports.cssLayoutBaseStyle = {
  borderWidth: 0,
  borderStyle: 'solid',
  borderColor: 'black',
  boxSizing: 'border-box',
  margin: 0,
  padding: 0,
  position: 'relative',
  color: 'inherit',
  font: 'inherit',
  textAlign: 'inherit',
  textDecorationLine: 'none',
  // fix flexbox bugs
  minHeight: 0,
  minWidth: 0
};

var defaultView = exports.defaultView = _extends({}, cssLayoutBaseStyle, {
  alignItems: 'stretch',
  display: 'flex',
  flexBasis: 'auto',
  flexDirection: 'column',
  flexShrink: 0,
  // button and anchor reset
  backgroundColor: 'transparent',
  // list reset
  listStyle: 'none',
  // iOS momentum scrolling
  WebkitOverflowScrolling: 'touch'
});

var defaultText = exports.defaultText = _extends({}, cssLayoutBaseStyle, {
  display: 'inline',
  wordWrap: 'break-word'
});