'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _glamor = require('glamor');

var _StyleSheet = require('../StyleSheet');

var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

var _css = require('../StyleSheet/css');

var css = _interopRequireWildcard(_css);

var _createReactStyleObject = require('../StyleSheet/createReactStyleObject');

var _createReactStyleObject2 = _interopRequireDefault(_createReactStyleObject);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

css.getDefaultStyleSheetRules().forEach(function (rule) {
  return (0, _glamor.insertRule)(rule);
});

function resolve(props) {
  var style = (0, _createReactStyleObject2.default)(props.style);
  var className = props.className || '';

  // Temp as there's only 'pointerEvents' that needs CSS classes right now
  var prop = 'pointerEvents';
  var value = style[prop];
  var replacementClassName = css.getStyleAsHelperClassName(prop, value);
  if (replacementClassName) {
    className += ' ' + replacementClassName;
    style[prop] = null;
  }

  var glamorClass = (0, _glamor.style)(style).toString();
  glamorClass = glamorClass !== '[object Object]' ? glamorClass : null;

  if (glamorClass) {
    className += ' ' + glamorClass;
  }

  className = className.trim();

  return { className: className, style: undefined };
}

exports.default = _extends({}, _StyleSheet2.default, {
  resolve: resolve
});