@using AP.FamilyTree.Web.PageModels.Trees
@using AP.FamilyTree.Web.PageModels.User
@using MatBlazor
@using AP.FamilyTree.Web.Data.Services.UserServices
@inject RoleService Service

<div>
    <MatDialog @bind-IsOpen="@ViewModel.DialogIsOpen" CanBeClosed="false">
        <EditForm Model="ViewModel.Model" OnValidSubmit="@(() => { SaveItem.InvokeAsync(ViewModel.Model); })">
            <MatDialogTitle class="diHeader">
                <h3>@ViewModel.Model.Login</h3>
                <div class="btn-group">
                    @if (ViewModel.IsConcurrencyError)
                    {
                        <span class="btn btn-nav btn-primary mr-1" @onclick="@(()=> ReloadItem.InvokeAsync(ViewModel.Model))">Reload</span>
                    }
                    else
                    {
                        <input type="submit" value="Speichern" class="btn btn-nav btn-primary mr-1" style="float: right; background: darkgreen;" />
                    }
                    <span class="btn btn-nav" @onclick="@(e => {ViewModel.DialogIsOpen = false;})">X</span>
                </div>
                <hr />
            </MatDialogTitle>
            <MatDialogContent>
                <DataAnnotationsValidator />
                <div style="width: 1500px; display: block; height: 700px;">
                    <div class="form-group row mb-1">
                        <label for="MotherId" class="col-1 pl-0">Роль</label>
                        <select class="form-control form-control-sm ml-0" style="width:300px;" @bind="@ViewModel.Model.RoleName">
                            @if (string.IsNullOrEmpty(ViewModel.Model.RoleName))
                            {
                                <option value="0" selected="selected">--</option>
                            }
                            else
                            {
                                <option value="0">--</option>
                            }
                            @foreach (var x in RoleList)
                            {
                                if (ViewModel.Model.RoleName == x)
                                {
                                    <option value="@x" selected="selected">@x</option>
                                }
                                else
                                {
                                    <option value="@x">@x</option>
                                }
                            }
                        </select>
                        <ValidationMessage For="@(() => ViewModel.Model.RoleName)" />
                    </div>
                </div>
            </MatDialogContent>
        </EditForm>
    </MatDialog>
</div>

@code {
    [Parameter]
    public EditRoleTableViewModel ViewModel { get; set; }

    [Parameter]
    public EventCallback<RoleItemViewModel> SaveItem { get; set; }

    [Parameter]
    public EventCallback<RoleItemViewModel> ReloadItem { get; set; }

    private List<string> RoleList = new List<string>();

    protected override async Task OnParametersSetAsync()
    {
        RoleList = await Service.GetRoles();
    }
}